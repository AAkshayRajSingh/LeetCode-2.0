#include <iostream>
using namespace std;

int partition(int arr[],int s,int e){
  int pivot=arr[s];
  int count=0;
  for(int i=s+1;i<=e;i++){
    if(arr[i]<pivot){
      count++;
    }
  }
  
  swap(arr[s],arr[s+count]);
  int i=s;
  int j=e;
  int pI=s+count;
  while(i<pI && j>pI){
    while(arr[i]<arr[pI]) i++;
    while(arr[j]>arr[pI]) j--;
    while(i<pI && j>pI)
    {
      swap(arr[i++],arr[j--]);
    }
  }
  return pI;
}
void quickSort(int arr[],int s,int e){
  if(s>=e)
    return ;
  int p=partition(arr,s,e);
  quickSort(arr,s,p-1);
  quickSort(arr,p+1,e);
}
int main() 
{
    int arr[5]={3,8,7,12,5};
    int n=5;
    // int n=sizeof(arr)/sizeof(arr[0]);
    quickSort(arr,0,n-1);
    for(int i=0;i<n;i++){
      cout<<arr[i]<<endl;
    }
    return 0;
}
